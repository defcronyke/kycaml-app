# Copyright (C) 2021  Jeremy Carter <jeremy@jeremycarter.ca>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# The GitLab CI/CD pipeline configuration lives in this
# file.

image: "golang:latest"

# NOTE: Install some compilers and build tools if necessary.
# You may need this if your project depends on C code.
# before_script:
#   - apt-get update
#   - apt-get install -y build-essential

# These are the GitLab CI/CD pipeline stages we want to run.
stages:
  # - test
  # - docs
  - debug-linux-x86_64
  - debug-windows-x86_64
  - release-linux-x86_64
  - release-windows-x86_64
  - deploy

# Pipeline "debug-linux-x86_64" stage
debug-linux-x86_64:
  stage: debug-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get install -y rsync upx # Install OS updates.
    - mkdir kycaml-app && mv * kycaml-app/ || true
    - git clone https://gitlab.com/defcronyke/kycaml.git
    - cd kycaml-app
    - go version # Display golang version.
    - ls -al
    - go get
    - go build -o main
    - ls -al
    - mkdir -p kycaml-app
    - cp main kycaml-app/kycaml-app
    - cp -r public/ kycaml-app/static/
    - cp get-lists.sh kycaml-app/
    - cp update-lists.sh kycaml-app/
    - cp LICENSE kycaml-app/
    - cp README.md kycaml-app/
    - chmod 755 kycaml-app/kycaml-app
    - ./build-cmd.sh
    - rsync -av --exclude={'*.go','*.sh'} cmd/ kycaml-app/cmd/
    - cd ..
    - mv kycaml-app kycaml-app-src
    - mv kycaml-app-src/kycaml-app kycaml-app
  artifacts:
    name: kycaml-app-debug-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - kycaml-app

# Pipeline "release-linux-x86_64" stage
release-linux-x86_64:
  stage: release-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get install -y rsync upx # Install OS updates.
    - mkdir kycaml-app && mv * kycaml-app/ || true
    - git clone https://gitlab.com/defcronyke/kycaml.git
    - cd kycaml-app
    - go version # Display golang version.
    - ls -al
    - go get
    - go build -o main -ldflags="-s -w"
    - upx --brute main
    - ls -al
    - mkdir -p kycaml-app
    - cp main kycaml-app/kycaml-app
    - cp -r public/ kycaml-app/static/
    - cp get-lists.sh kycaml-app/
    - cp update-lists.sh kycaml-app/
    - cp LICENSE kycaml-app/
    - cp README.md kycaml-app/
    - chmod 755 kycaml-app/kycaml-app
    - ./build-cmd.sh
    - rsync -av --exclude={'*.go','*.sh'} cmd/ kycaml-app/cmd/
    - cd ..
    - mv kycaml-app kycaml-app-src
    - mv kycaml-app-src/kycaml-app kycaml-app
  artifacts:
    name: kycaml-app-release-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - kycaml-app

pages:
  stage: deploy
  needs: # Wait for a previous stage to finish before running this stage.
    []
  script:
    - echo 'Nothing to do...'
  artifacts:
    paths:
      - public
    expire_in: 1 day
  only:
    - master
