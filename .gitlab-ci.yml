# Copyright Â© 2021 Jeremy Carter <jeremy@jeremycarter.ca>
#
# By using this software, you agree to the LICENSE TERMS
# outlined in the file titled LICENSE.md contained in the
# top-level directory of this project. If you don't agree
# to the LICENSE TERMS, you aren't allowed to use this
# software.

# The GitLab CI/CD pipeline configuration lives in this
# file.

image: "golang:latest"

# NOTE: Install some compilers and build tools if necessary.
# You may need this if your project depends on C code.
# before_script:
#   - apt-get update
#   - apt-get install -y build-essential

# These are the GitLab CI/CD pipeline stages we want to run.
stages:
  # - test
  # - docs
  - debug-linux-x86_64
  - debug-windows-x86_64
  - release-linux-x86_64
  - release-windows-x86_64

# Pipeline "debug-linux-x86_64" stage
debug-linux-x86_64:
  stage: debug-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove -y # Install OS updates.
    - go version # Display golang version.
    - ls -al
    - go get
    - go build -o main
    - ls -al
    - mkdir -p kycaml-app
    - cp main kycaml-app/kycaml-app
    - cp -r public/ kycaml-app/static/
    - chmod 755 kycaml-app/kycaml-app
  artifacts:
    name: kycaml-app-debug-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - kycaml-app

# Pipeline "release-linux-x86_64" stage
release-linux-x86_64:
  stage: release-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get autoremove -y && apt-get install -y upx # Install OS updates.
    - mkdir kycaml-app && mv * kycaml-app/ || true
    - git clone https://gitlab.com/defcronyke/kycaml.git
    - cd kycaml-app
    - go version # Display golang version.
    - ls -al
    - go get
    - go build -o main -ldflags="-s -w"
    - upx --brute main
    # - upx main
    - ls -al
    - mkdir -p kycaml-app
    - cp main kycaml-app/kycaml-app
    - cp -r public/ kycaml-app/static/
    - strip -s kycaml-app/kycaml-app
    - chmod 755 kycaml-app/kycaml-app
  artifacts:
    name: kycaml-app-release-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - kycaml-app/kycaml-app
